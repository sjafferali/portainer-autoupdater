name: Push to main

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.50.1
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Test
        run: go test -v -coverprofile coverage.out -covermode atomic ./... 
  cleanup:
    needs:
      - lint
      - test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: dev
          fail-if-no-assets: false
          assets: |
            autoupdater-*
  releases-matrix:
    permissions:
      contents: write  # for wangyoucao577/go-release-action to upload release assets
    needs: cleanup
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
            - goarch: "386"
              goos: darwin
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2

      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date -u +%Y%m%d-%H%M) >> ${GITHUB_ENV}

      - name: Go Release Binaries
        uses: wangyoucao577/go-release-action@156f172aa3d27f3879a47cad8810b366c299e9e9 # v1.22
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          release_tag: dev
          overwrite: true
          project_path: cmd/autoupdater
          binary_name: autoupdater
          asset_name: "autoupdater-${{ env.BUILD_TIME }}-${{ matrix.goos }}-${{ matrix.goarch }}"
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: 
      - test
      - lint
    env:
      CGO_ENABLED: 0
      TAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a #v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build
        uses: goreleaser/goreleaser-action@f82d6c1c344bcacabba2c841718984797f664a6b #v3
        with:
          version: v0.155.0
          args: --debug --snapshot
        env:
          GORELEASER_CURRENT_TAG: latest-dev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable experimental docker features
        run: |
          mkdir -p ~/.docker/ && \
          echo '{"experimental": "enabled"}' > ~/.docker/config.json
      - name: Create manifest for latest
        run: |
          docker manifest create \
            sjafferali/portainer-autoupdater:latest-dev \
            sjafferali/portainer-autoupdater:amd64-latest-dev \
            sjafferali/portainer-autoupdater:i386-latest-dev \
            sjafferali/portainer-autoupdater:armhf-latest-dev \
            sjafferali/portainer-autoupdater:arm64v8-latest-dev
      - name: Annotate manifest for latest
        run: |
          docker manifest annotate \
            sjafferali/portainer-autoupdater:latest-dev \
            sjafferali/portainer-autoupdater:i386-latest-dev \
            --os linux \
            --arch 386
      
          docker manifest annotate \
            sjafferali/portainer-autoupdater:latest-dev \
            sjafferali/portainer-autoupdater:armhf-latest-dev \
            --os linux \
            --arch arm
            
          docker manifest annotate \
            sjafferali/portainer-autoupdater:latest-dev \
            sjafferali/portainer-autoupdater:arm64v8-latest-dev \
            --os linux \
            --arch arm64 \
            --variant v8
      - name: Push manifests to Dockerhub
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_TOKEN && \
            docker manifest push sjafferali/portainer-autoupdater:latest-dev
